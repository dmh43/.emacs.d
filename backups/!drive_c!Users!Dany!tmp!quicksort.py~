mylist = [2] + [1 for x in range(10)] + [10000] + [-100]

def qsort(v):
    if len(v) == 1:
        return [v[0]]
    elif len(v) == 0:
        return []
    piv = v[len(v)/2]
    return qsort(filter(lambda elem: elem < piv, v)) + filter(lambda elem: elem == piv, v) + qsort(filter(lambda elem: elem > piv, v))

def qsort3(v):
    v_copy = v[:]
    qsort_inplace(v_copy)
    return v_copy

def qsort_inplace(v):
    if len(v) == 1:
        return [v[0]]
    elif len(v) == 0:
        return []
    else:
        piv = v[len(v)/2]
        i_left = 0
        i_right = len(v)-1
        i_piv = len(v)/2
        num_pivs = 1
        while True:
            while v[i_left] <= piv:
                if v[i_left] == piv:
                    if i_left < i_piv:
                        i_piv -= 1
                        v[i_left] = v[i_piv]
                        v[i_piv] = piv
                        num_pivs += 1
                    else:
                        break
                else:
                    i_left += 1
            while v[i_right] > piv:
                if v[i_right] == piv:
                    if i_right >= i_piv + num_pivs:
                        v[i_right] = v[i_piv]
                        v[i_piv] = piv
                        num_pivs += 1
                    else:
                        break
                else:
                    i_right -= 1
            if i_left < i_right:
                tmp = v[i_left]
                v[i_left] = v[i_right]
                v[i_right] = tmp
                i_left += 1
                i_right -= 1
            else:
                break
        qsort_inplace(v[0:i_piv])
        qsort_inplace(v[i_piv+num_pivs-1:])
