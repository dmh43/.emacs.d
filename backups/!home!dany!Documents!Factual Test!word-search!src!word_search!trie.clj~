(ns word-search.trie)

(defn cons-trie
  [trie val]
  (let [parted-data (map #(keyword (str %)) (seq val))]
    (assoc-in trie
              parted-data
              (merge
               (get-in trie parted-data)
               {:end-val true}))))

(defn in-trie?
  [trie val]
  (:end-val (get-in trie (map #(keyword (str %)) (seq val))) false))

(defn prefix-in-trie?
  [trie prefix]
  (not-empty (get-in trie (map #(keyword (str %)) (seq prefix)) [])))

(defn to-trie
  [coll]
  (reduce cons-trie {} coll))
