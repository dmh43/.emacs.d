* TODO [#A] Listed in assignment [100%]
- [X] Handle bad input
- [X] Make sure player can never be beaten
- [X] Improve UI [100%]
  - [X] Output Color based on user's terminal?
  - [X] Very unclear which positions have been played by comp. Use o and x instead
- [X] Clarify messages to user
- [X] Notfy user when computer plays. Maybe using some sort of bank of wise remarks
- [X] User can select game mode; HvH, CvC, HvC
- [X] Allow user to select who goes first
- [X] Allow user to select if they are x or o 

* [#C] My ideas [58%]
- [X] You can write over the computer
- [X] Allow a different UI to be easy to implement
- [ ] Undo!
- [X] dynamic resizing
- [X] move cursor around while blinking. Enter to submit move
- [X] keep track of score
- [ ] back in menu
- [X] draw frame function to draw points, mode, name of game etc
- [X] board size! connect 4!
- [ ] Choose icon from list! smilies etc
- [ ] ASCII art to fill box
- [ ] Clean grid drawing [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/display.clj::(draw-bar%20screen%20:vert%20second-bar-y)))][here]] with â•‹
*** Adherence to SOLID principles
*** Appropriate separation of concerns
*** Clarity and readability
*** Expressive naming
* TODO [#B] Code improvements [78%]
- [ ] describe stride indexing
- [ ] allow user to review game
- [X] calculate menu item positions automatically
- [X] Make cursor-motion not move when no item in that direction (check if dist is neg?)
- [X] Clean up cursor-motion and how it uses dist
- [X] fix drawing issue without sleep? I think this will require a changed? atom
- [X] undo comment [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/ai.clj::whose-turn%20:P1%20#_(if%20(%3D%20:P1%20(:player-turn%20game))%20:P2%20:P1)%5D][here]]
- [X] [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/ai.clj::(->%20game][this]] should be done by checking if nil instead, to only do one of these per turn
- [X] finish [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/core.clj::(defn%20init-board-menu][init-board-menu]]
- [X] Maybe split [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/core.clj::"Draw%20entire%20UI%20and%20latch%20the%20buffered%20buffer"][draw-game]] into multiple functions? Separate concerns
- [X] Organize namespaces
- [X] fix background color in textmode and swing
- [X] Make [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/menus.clj::(let%20%5Bitems%20(->%20game%20:menu%20:items)][menu-item-positions]] iterate over every comb of x and y
- [X] Remove unnecessary update-pos from both [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/display.clj::(defmethod%20draw-game%20:main][draw-game]] implemetations
- [X] write tests
- [X] fix [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/menus.clj::(defn%20dist][dist]] calculation or cursor-motion
- [ ] update [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/test/menus_test.clj::(testing%20"enter-menu"][tests]]
- [ ] organize namespaces
- [X] move [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/menus.clj::%5Bgame%5D][enter-menu]] to core
- [ ] make sure HvC computer plays first when told to 
- [X] make sure game over can happen after computer plays. during HvC
- [X] keep track of who won in game over
- [X] call who-won from game-over?
* [#A] Last Minute Changes
- [ ] use :text instead in [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/core.clj::(game-loop%20(init-game)%20(init-display%20:swing))))][-main]] as default instead of :swing
- [X] make compatible with menu objects [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/menus.clj::(apply%20hash-map%20(interleave%20(range%209)%20(repeat%20:empty))))][file:~/Documents/8th Light Task/coding_challenges/clojure/src/game/menus.clj::(apply hash-map (interleave (range 9) (repeat :empty))))]]
- [ ] break up [[file:~/Documents/8th%20Light%20Task/coding_challenges/clojure/src/game/input.clj::updated-position-game)))][get-input]]
- [ ] write tests for input?
